// Mocks generated by Mockito 5.1.0 from annotations
// in tv_show/test/presentation/pages/tv_show_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:flutter_bloc/flutter_bloc.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_show/domain/entities/tv_show_detail.dart' as _i9;
import 'package:tv_show/presentation/cubit/tv_show_detail/tv_show_detail_cubit.dart'
    as _i5;
import 'package:tv_show/presentation/cubit/tv_show_detail/tv_show_detail_state.dart'
    as _i2;
import 'package:tv_show/presentation/cubit/tv_show_recommendations/tv_show_recommendations_cubit.dart'
    as _i10;
import 'package:tv_show/presentation/cubit/tv_show_recommendations/tv_show_recommendations_state.dart'
    as _i4;
import 'package:tv_show/presentation/cubit/watchlist_tv_show/watchlist_tv_show_cubit.dart'
    as _i8;
import 'package:tv_show/presentation/cubit/watchlist_tv_show/watchlist_tv_show_state.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvShowDetailState_0 extends _i1.Fake
    implements _i2.TvShowDetailState {}

class _FakeWatchlistTvShowState_1 extends _i1.Fake
    implements _i3.WatchlistTvShowState {}

class _FakeTvShowRecommendationsState_2 extends _i1.Fake
    implements _i4.TvShowRecommendationsState {}

/// A class which mocks [TvShowDetailCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDetailCubit extends _i1.Mock implements _i5.TvShowDetailCubit {
  MockTvShowDetailCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowDetailState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
          returnValue: _FakeTvShowDetailState_0()) as _i2.TvShowDetailState);
  @override
  _i6.Stream<_i2.TvShowDetailState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i2.TvShowDetailState>.empty())
          as _i6.Stream<_i2.TvShowDetailState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void fetchData(int? id) =>
      super.noSuchMethod(Invocation.method(#fetchData, [id]),
          returnValueForMissingStub: null);
  @override
  void emit(_i2.TvShowDetailState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void onChange(_i7.Change<_i2.TvShowDetailState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
}

/// A class which mocks [WatchlistTvShowCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistTvShowCubit extends _i1.Mock
    implements _i8.WatchlistTvShowCubit {
  MockWatchlistTvShowCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.WatchlistTvShowState get state => (super.noSuchMethod(
      Invocation.getter(#state),
      returnValue: _FakeWatchlistTvShowState_1()) as _i3.WatchlistTvShowState);
  @override
  _i6.Stream<_i3.WatchlistTvShowState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i3.WatchlistTvShowState>.empty())
          as _i6.Stream<_i3.WatchlistTvShowState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void fetchData() => super.noSuchMethod(Invocation.method(#fetchData, []),
      returnValueForMissingStub: null);
  @override
  void addToWatchlist(_i9.TvShowDetail? tvShowDetail) =>
      super.noSuchMethod(Invocation.method(#addToWatchlist, [tvShowDetail]),
          returnValueForMissingStub: null);
  @override
  void removeFromWatchlist(_i9.TvShowDetail? tvShowDetail) => super
      .noSuchMethod(Invocation.method(#removeFromWatchlist, [tvShowDetail]),
          returnValueForMissingStub: null);
  @override
  void loadWatchlistStatus(int? id) =>
      super.noSuchMethod(Invocation.method(#loadWatchlistStatus, [id]),
          returnValueForMissingStub: null);
  @override
  void emit(_i3.WatchlistTvShowState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void onChange(_i7.Change<_i3.WatchlistTvShowState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
}

/// A class which mocks [TvShowRecommendationsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRecommendationsCubit extends _i1.Mock
    implements _i10.TvShowRecommendationsCubit {
  MockTvShowRecommendationsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvShowRecommendationsState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
              returnValue: _FakeTvShowRecommendationsState_2())
          as _i4.TvShowRecommendationsState);
  @override
  _i6.Stream<_i4.TvShowRecommendationsState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i4.TvShowRecommendationsState>.empty())
          as _i6.Stream<_i4.TvShowRecommendationsState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void fetchData(int? id) =>
      super.noSuchMethod(Invocation.method(#fetchData, [id]),
          returnValueForMissingStub: null);
  @override
  void emit(_i4.TvShowRecommendationsState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void onChange(_i7.Change<_i4.TvShowRecommendationsState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
}
